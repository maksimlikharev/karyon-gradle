apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'java-library-distribution'
apply plugin: 'os-package'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.netflix.nebula:gradle-ospackage-plugin:1.12.2'
	}
}


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.10'
	
	compile 'com.netflix.karyon:karyon-servo:2.1.00-RC6'
	compile 'com.netflix.karyon:karyon-core:2.1.00-RC6'
	compile 'com.netflix.karyon:karyon-eureka:2.1.00-RC6'
	compile 'com.netflix.karyon:karyon-governator:2.1.00-RC6'
	compile 'com.netflix.karyon:karyon-archaius:2.1.00-RC6'
	compile 'org.codehaus.jettison:jettison:1.2'
}

distributions {
    main{
		baseName = 'karyon-gradle'
		
    contents {
            from { 'scripts' }
        }
    }
}

ospackage {
    version = '0.0.1'

    def karyon = System.getenv("KARYON_OPTS")
    if ( karyon ) {
        println "Setting up Karyon options: \"${karyon}\""
		postInstall("echo 'export JAVA_OPTS=\"${karyon}\"' >> /opt/karyon-gradle/setenv.sh")
    }
	
    from( zipTree('build/distributions/karyon-gradle.zip') ) {
        into('/opt')
    }
}

buildDeb.dependsOn(distZip)